# This is a basic workflow to help you get started with Actions

name: Unmaintained files modified

# Controls when the action will run. 
on: 
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      # Get files in pull request
      - name: Get files from the PR
        id: get_files
        run: |
          API_URL="https://api.github.com/repos/jchuerva/test_app_1/pulls/${{ github.event.pull_request.number }}/files"
          FILES=$(curl -s -X GET -H "Authorization: Bearer ${{ secrets.TOKEN }}" $API_URL | jq -r '.[] | .filename')
          echo $FILES
          echo "FILES=$(echo $FILES)" >> $GITHUB_ENV

      # - run: echo $FILES

      - name: Check if the files have an serviceowner
        run: |
          for file in $FILES
          do
            if ! grep -Fxq "$file" docs/serviceowners_no_matches.txt
            then
              UNOWNED_FILES+=($file)
            fi
          done
          echo "UNOWNED_FILES=$(echo $UNOWNED_FILES)" >> $GITHUB_ENV
          echo "::set-output name=num_unowned_files::${#UNOWNED_FILES[@]}"

      - name: Display message
        if: ${{ ${#UNOWNED_FILES[@]} != 0 }}
        run: |
          echo "This PR touch some unowned files\n"
          for files in $UNOWNED_FILES
          do
            echo "   - $file\n"
          done
          echo "To fix it, you need to find a maintainer for them and update CODEOWNERS." >&2
          


